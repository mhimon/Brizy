// Line Height Setting min/max
$line-height-min: 1;
$line-height-max: 5;
$letter-spacing-min: -20;
$letter-spacing-max: 20;
$font-weight-min: 1;
$font-weight-max: 9;
$suffixes: px, em, rem, vw;

// Font Size Setting min/max
$font-size-min: 2;
$font-size-max: 300;

// Line-height 1 - 3
@mixin generateLineHeight($line-height-min, $line-height-max, $device) {
  @for $i from $line-height-min through $line-height-max {
    .brz-lh-#{$device}-#{$i} {
      $number: $i + em;

      line-height: $number !important;
    }

    @for $j from 1 through 9 {
      .brz-lh-#{$device}-#{$i}_#{$j} {
        $number: to-number("#{$i}.#{$j}") + em;

        line-height: $number !important;
      }
    }
  }
}

// Letter Spacing
@mixin generateLetterSpacing(
  $letter-spacing-min,
  $letter-spacing-max,
  $device
) {
  @for $i from $letter-spacing-min through 0 {
    $i: -1 * $i;
    .brz-ls-#{$device}-m_#{$i} {
      $number: -1 * $i + px;

      letter-spacing: $number !important;
    }

    @for $j from 5 through 5 {
      .brz-ls-#{$device}-m_#{$i}_#{$j} {
        $number: -1 * to-number("#{$i}.#{$j}") + px;

        letter-spacing: $number !important;
      }
    }
  }

  @for $i from 0 through $letter-spacing-max {
    .brz-ls-#{$device}-#{$i} {
      $number: $i + px;

      letter-spacing: $number !important;
    }

    @for $j from 5 through 5 {
      .brz-ls-#{$device}-#{$i}_#{$j} {
        $number: to-number("#{$i}.#{$j}") + px;

        letter-spacing: $number !important;
      }
    }
  }
}

// Responsive
/// @param {minNumber} min Number
/// @param {maxNumber} max Number
/// @param {dep} small/medium/large(Standard)
/// @return generated className with value

@mixin generateFontSize($minNumber, $maxNumber, $dep, $device) {
  $map: null;
  $number: null;

  @if $dep == "small" {
    $map: (
      1: 0.9,
      2: 0.8,
      3: 0.7,
      4: 0.6,
      5: 0.5,
      6: 0.4,
      7: 0.3
    );
  } @else if $dep == "large" {
    $map: (
      1: 1,
      2: 1,
      3: 1,
      4: 1,
      5: 1,
      6: 1,
      7: 1
    );
  }

  @for $i from $minNumber through $maxNumber {
    @if $i >= 2 and $i <= 20 {
      $number: 1;
    } @else if $i >= 20 and $i <= 25 {
      $number: map-get($map, 1);
    } @else if $i >= 26 and $i <= 30 {
      $number: map-get($map, 2);
    } @else if $i >= 31 and $i <= 45 {
      $number: map-get($map, 3);
    } @else if $i >= 46 and $i <= 65 {
      $number: map-get($map, 4);
    } @else if $i >= 66 and $i <= 80 {
      $number: map-get($map, 5);
    } @else if $i >= 81 and $i <= 100 {
      $number: map-get($map, 6);
    } @else if $i > 100 {
      $number: map-get($map, 7);
    }

    .brz-fs-#{$device}-#{$i} {
      $numberEditor: round($i * $number) + px;

      font-size: $numberEditor !important;
    }

    @each $suffix in $suffixes {
      .brz-fss-#{$device}-#{$suffix}.brz-fs-#{$device}-#{$i} {
        $numberEditor: round($i * $number) + $suffix;

        font-size: $numberEditor !important;
      }
    }

    .brz-story {
      .brz-fs-#{$device}-#{$i} {
        $numberStory: round($i * $number);

        font-size: percentage($numberStory / 100 * 0.23) !important;
      }
    }
  }
}

// Font Weight
@mixin generateFontWeight($font-weight-min, $font-weight-max, $device) {
  @for $i from $font-weight-min through $letter-spacing-max {
    $i: $i * 100;

    .brz-fw-#{$device}-#{$i} {
      font-weight: $i !important;
    }
  }
}
